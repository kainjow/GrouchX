// Copyright (c) 1991 Eric Shapiro. All Rights Reserved. #define ANIM_HEADER_SIG	'ANIM'typedef struct __attribute__((__packed__)){		/* first some record information */	uint32_t		sig;				/* 'ANIM' */	uint32_t		record_size;		/* total size of this record (including images) */	int32_t		version;			/* 0 for now */	uint32_t		disable_bits;		/* disable playback code version (bitfield) */			/* now the image information */	uint32_t		num_images;			/* number of images */	uint32_t		bytes_per_image;	/* total bytes for a single image (no mask) */	uint32_t		image_offset;		/* bytes from beginning of this header */	uint32_t		num_masks;			/* number of masks */	uint32_t		bytes_per_mask;		/* total bytes for a single mask */	uint32_t		mask_offset;		/* bytes from beginning of this header */	uint16_t		orig_width;			/* width of actual image (pixels) */	uint16_t		rounded_width;		/* width rounded to even byte (pixels) */	uint16_t		height;				/* pixels tall */	uint16_t		depth;				/* bits/pixel */	uint16_t		hres;				/* in pixels/inch */	uint16_t		vres;				/* in pixels/inch */	int16_t		pixel_type;			/* 0=Chunky, 1=Planar */	uint16_t		reserved1;			/* set to zero on recording */		/* these will indicate future expansion */	uint32_t		num_add_fields;		/* future expansion fields (0 for now) */	uint32_t		add_field_offset;	/* where are they (relative to this record)? */			/* compression information */	int16_t		image_compression;	/* 0=no compression */	int16_t		mask_compression;	/* 0=no compression */			/* some additional fields for programmer use */	int32_t		playback_use;		/* always 0. playback code can use this field */	int32_t		recording_use;		/* recording code can use this for anything it wants */			/* and a few reserved fields */	int32_t		reserved2;	int32_t		reserved3;	int32_t		reserved4;	int32_t		reserved5;	int32_t		reserved6;} ANIM_HEADER;/*	Notes:		All longs & shorts are stored Motorola format (hi byte first).		All fields are packed to even boundaries only (not to 4 byte boundaries)	Field description:		sig			Always 'ANIM' (0x414E494D). Playback code won't work without this.		record_size			Total size of this record including all masks, images, and			additional fields. Useful when reading in from a disk file (data fork).		version			Current version number of this record.  Changing this will have			no effect on playback code.		disable_bits			Each bit will disable playback from a different version of			playback code.  Example: 0x7 (0111 binary) will disable playback 			code versions 0, 1, and 2 from displaying this image.		num_images			The number of images.		bytes_per_image			The number of bytes per image stored. This value will get you from			one image to the next. For planar images, you should divide this			value by depth to get distance between planes.			If compression mode is on, this will have no meaning.		image_offset			Byte offset from beginning of this record to the first image.			(Add this to the address of the record to get location of image)		num_masks			The number of masks. This should be one of the following:				A) 0=No masks. B) 1=One mask for all images. 				C) The same as num_images (for 1 mask per image).		bytes_per_mask			The number of bytes per mask stored. If compression mode is on,			this will have no meaning.		mask_offset			Byte offset from beginning of this record to the first mask.		width			Width of the image itself in pixels.		rounded_width			Width of the bitmaps. This is rounded up to an even byte. For example,			width=9 will give a rounded_width of 16.  Rounding up to 32 would also			be acceptable.		height			Number of pixels tall the image is.		depth			Bits per pixel for the images.  Must be a power of two (1, 2, 4, 8, 16, 32).			Note that masks always have a depth of 1 bit/pixel.			ebs - change this for transparency???		hres			Number of pixels per inch horizontally of original image.		vres			Number of pixels per inch vertically of original image.		pixel_type			0 for chunky, 1 for planar. Version 1 only supports chunky.		unused2			Don't use this field. Set to zero on recording.		image_compression		mask_compression			These fields contain a compression algorithm number. Unused for type			1 records (set to 0). Playback code should always check these.		playback_use			This field should always be set to zero by recording code. Playback			code may use this for anything desired.		recording_use			This field may be used by recording code. Its value is undefined for			playback code.					reserved2-6			Recording code must set this to zero.*//*	Adding additional fields to this structure:		Set num_add_fields to the number of fields added.		Set add_field_offset to contain byte offset of where these additional			fields begin.		The additional fields will be stored in the following format:			int32	size		- number of bytes in this addition (including self).			int32	sig			- signature of this new addition				(whatever bytes are desired go here)					Example:			I want to bound each image with a rectangle. I'll create an addition			field:				size=12				sig='RECT'				short hsize				short vsize				*/